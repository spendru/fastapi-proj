FROM python:3.9-slim-bullseye

# Set environment variables for non-interactive installation
ENV ACCEPT_EULA=Y
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies (including gnupg for Microsoft repo key)
RUN apt-get update && apt-get install -y \
    gnupg \
    gcc \
    g++ \
    curl \
    unixodbc \
    unixodbc-dev \
    libgssapi-krb5-2 \
    libssl1.1 \
    odbcinst \
    ca-certificates \
    apt-transport-https \
    software-properties-common \
    && apt-get clean

# Add Microsoft repository for ODBC drivers
RUN curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | tee /etc/apt/trusted.gpg.d/microsoft.asc \
    && echo "deb [arch=amd64] https://packages.microsoft.com/debian/11/prod bullseye main" > /etc/apt/sources.list.d/mssql-release.list

# Install Microsoft ODBC Driver for SQL Server (including accepting the EULA)
RUN apt-get update && apt-get install -y \
    msodbcsql17 \
    mssql-tools \
    && apt-get clean

# Set ODBC environment variables
ENV PATH="/opt/mssql-tools/bin:${PATH}"

# Install AWS Lambda Runtime Interface Client
RUN pip install --no-cache-dir awslambdaric

# Install Python dependencies
RUN pip install --no-cache-dir \
    pyodbc \
    pandas \
    sqlalchemy \
    pymssql
# Set the entry point for the Lambda function
ENTRYPOINT ["/usr/local/bin/python", "-m", "awslambdaric"]

# Set the command to run the Lambda function handler
CMD ["app.lambda_handler"]
